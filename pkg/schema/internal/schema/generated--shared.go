package fixtures

// this file is generated by gooo ORM. DON'T EDIT this file
import (
	"context"
	"database/sql"
)

type scanner interface {
	Scan(dest ...any) error
}
type queryer interface {
	QueryRowContext(ctx context.Context, query string, dest ...any) *sql.Row
	QueryContext(ctx context.Context, query string, dest ...any) (*sql.Rows, error)
	ExecContext(ctx context.Context, query string, args ...any) (sql.Result, error)
}

type NotFoundError struct{}

func (e NotFoundError) Error() string {
	return "record not found"
}

var ErrNotFound = NotFoundError{}

type PrimaryKeyMissingError struct{}

func (e PrimaryKeyMissingError) Error() string {
	return "primary key is required"
}

var ErrPrimaryKeyMissing = PrimaryKeyMissingError{}

func NewUser() *User {
	return &User{}
}

func NewUserWith(obj User) *User {
	m := &User{}
	m.Assign(obj)

	return m
}

func NewPost() *Post {
	return &Post{}
}

func NewPostWith(obj Post) *Post {
	m := &Post{}
	m.Assign(obj)

	return m
}

func NewProfile() *Profile {
	return &Profile{}
}

func NewProfileWith(obj Profile) *Profile {
	m := &Profile{}
	m.Assign(obj)

	return m
}

func NewLike() *Like {
	return &Like{}
}

func NewLikeWith(obj Like) *Like {
	m := &Like{}
	m.Assign(obj)

	return m
}
