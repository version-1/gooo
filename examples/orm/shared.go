package orm

// this file is generated by gooo ORM. DON'T EDIT this file
import (
	"context"
	"database/sql"

	"github.com/version-1/gooo/examples/orm/schema"
	goooerrors "github.com/version-1/gooo/pkg/datasource/orm/errors"
)

type scanner interface {
	Scan(dest ...any) error
}
type validatable interface {
	Validate() goooerrors.ValidationError
}
type queryer interface {
	QueryRowContext(ctx context.Context, query string, dest ...any) *sql.Row
	QueryContext(ctx context.Context, query string, dest ...any) (*sql.Rows, error)
	ExecContext(ctx context.Context, query string, args ...any) (sql.Result, error)
}

type NotFoundError struct{}

func (e NotFoundError) Error() string {
	return "record not found"
}

var ErrNotFound = NotFoundError{}

type PrimaryKeyMissingError struct{}

func (e PrimaryKeyMissingError) Error() string {
	return "primary key is required"
}

var ErrPrimaryKeyMissing = PrimaryKeyMissingError{}

func NewUser() *User {
	return &User{
		Schema: schema.UserSchema,
	}
}
